
import streamlit as st
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder

st.set_page_config(page_title="AI D·ª± ƒëo√°n T√°c nh√¢n v√† G·ª£i √Ω Kh√°ng sinh", layout="wide")
st.title("üß¨ AI D·ª± ƒëo√°n T√°c nh√¢n v√† G·ª£i √Ω Kh√°ng sinh")

@st.cache_data
def load_model():
    df = pd.read_csv("AI_13_cleaned.csv")
    df = df[df["Tac nhan"] != "unspecified"]
    X = df.drop(columns=["Tac nhan"])
    y = df["Tac nhan"]

    for col in X.columns:
        if X[col].dropna().isin([0.0, 1.0]).all():
            X[col] = X[col].astype(int)

    X = X.dropna()
    y = y[X.index]

    label_encoder = LabelEncoder()
    y_encoded = label_encoder.fit_transform(y)
    model = RandomForestClassifier(n_estimators=100, random_state=42)
    model.fit(X, y_encoded)
    return model, label_encoder, X.columns.tolist()

@st.cache_data
def load_ksd():
    return pd.read_csv("M√¥ h√¨nh KSD.csv")

model, encoder, features = load_model()
df_ksd = load_ksd()

st.header("üìã Nh·∫≠p d·ªØ li·ªáu l√¢m s√†ng")
user_input = {}
for col in features:
    if col.lower() in ["sot", "ho", "non0 oi", "tieu chay", "kich thich0 quay khoc",
                       "tho ren0 met0 nhanh", "bo an0 an kem", "chay mui", "dam", "kho tho",
                       "kho khe", "ran phoi", "dong dac phoi phai", "dong dac phoi trai", "1 lom long nguc"]:
        user_input[col] = 1 if st.radio(col, ["Kh√¥ng", "C√≥"], horizontal=True) == "C√≥" else 0
    else:
        user_input[col] = st.number_input(col, value=0.0, format="%.2f")

if st.button("üîç D·ª± ƒëo√°n"):
    input_df = pd.DataFrame([user_input])
    pred = model.predict(input_df)[0]
    pathogen = encoder.inverse_transform([pred])[0]
    st.success("‚úÖ T√°c nh√¢n ƒë∆∞·ª£c d·ª± ƒëo√°n: **{}**".format(pathogen))

    st.subheader("üíä G·ª£i √Ω kh√°ng sinh")
    if pathogen == "RSV":
        st.info("RSV l√† virus, kh√¥ng d√πng kh√°ng sinh.")
    elif pathogen == "M. pneumonia":
        st.write("Khuy·∫øn c√°o: Macrolide (Azithromycin), Doxycycline, Levofloxacin")
    else:
        row = df_ksd[df_ksd["Tac nhan"] == pathogen]
        if not row.empty:
            khang_sinh = row.drop(columns=["Tac nhan"]).T
            ks_goi_y = khang_sinh[khang_sinh[row.index[0]] == 0.5].index.tolist()
            if ks_goi_y:
                st.write("Kh√°ng sinh nh·∫°y (g·ª£i √Ω):")
                for ks in ks_goi_y:
                    st.markdown("- {}".format(ks))
            else:
                st.warning("Kh√¥ng c√≥ kh√°ng sinh n√†o nh·∫°y ƒë∆∞·ª£c ghi nh·∫≠n.")
        else:
            st.error("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu kh√°ng sinh ƒë·ªì.")
